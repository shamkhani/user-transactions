#!/usr/bin/env php
<?php

require_once __DIR__ . '/vendor/autoload.php';

use App\AppKernel;
use Symfony\Component\Console\Application;

$kernel = new AppKernel('dev', true);
$kernel->boot();

$container = $kernel->getContainer();
$application = $container->get(Application::class);
$application->run();

// if (file_exists(__DIR__ . '/../../autoload.php')) {
//     require __DIR__ . '/../../autoload.php';
// } else {
//     require __DIR__ . '/vendor/autoload.php';
// }

// $db = (new DatabaseFactory())->getProvider("mysql");
// // $container = new ContainerBuilder();
// $container = $kernel->getContainer();
// $container->register('db', 'App\Database\Driver\Mysql');
// $container->register('cache', 'App\Service\Cache\Redis');
// $container->register('transactionRepository', 'App\Repository\Transaction\TransactionRepository')
//     ->addArgument(new Reference("db"));
// $container->register('userRepository', 'App\Repository\User\UserRepository')
//     ->addArgument(new Reference("db"));
// $container->register('transactionService', 'App\Service\Transaction\TransactionService')
//     ->addArgument(new Reference('transactionRepository'))
//     ->addArgument(new Reference('userRepository'))
//     ->addArgument(new Reference('db'))
//     ->addArgument(new Reference('cache'));
// $container->register('userService', 'App\Service\User\UserService')
//     ->addArgument(new Reference('userRepository'));

// $container->register('RoomVuCommand', ' App\Commands\RoomVuCommand')
//     ->addArgument(new Reference('transactionService'))
//     ->addArgument(new Reference('userService'))
//     ->addMethodCall('setContainer', [new Reference('service_container')]);
// $container->compile();


// /**
//  * Start the console application.
//  */

// // $app = new Application('RoomVu Challange', '1.0.0');
// // $app->add($container->get('RoomVuCommand'));
// // $app->run();

// $application = $container->get(Application::class);
// $application->run();
